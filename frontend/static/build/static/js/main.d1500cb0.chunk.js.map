{"version":3,"sources":["Registration.js","Login.js","Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","e","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","placeholder","type","onChange","className","onClick","handleNavigation","React","Component","Login","password","handleLogin","htmlFor","App","display_name","avatar","preview","handleImage","file","files","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","user","options","method","headers","Cookies","get","body","fetch","response","console","log","src","alt","selection","handleLogout","JSON","stringify","handleError","err","warn","catch","ok","json","data","set","key","alert","remove","html","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1500cb0.chunk.js","sourcesContent":["import React from 'react';\n// import Cookies from 'js-cookie';\n\nclass Registration extends React.Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(e){\n    this.setState( {[e.target.name]: e.target.value} );\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n  // handleRegistration needs to be created\n  //handleNavigation needs to be created\n\nrender(){\n  return(\n    <>\n      <form onSubmit={this.handleSubmit}>\n        <label>New User? <br/> Register!</label>\n          <input placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n        <label></label>\n          <input placeholder=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleInput}/>\n        <label></label>\n        <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n        <label></label>\n        <input className=\"login-input\" placeholder=\"re-type password\" type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <button onClick={() => this.props.handleNavigation('login') }>Current User Login</button>\n    </>\n  );\n}\n}\n\nexport default Registration;\n","import React from 'react';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n  // need to add handleLogin\n\nrender(){\n  return (\n    <>\n      <form onSubmit={this.handleSubmit}>\n      <label htmlFor=\"login\">Login:</label>\n        <input placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n        <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n        <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n        <button className=\"submit-button\" type=\"submit\">Submit</button>\n        </form>\n        <button onClick={() => this.props.handleNavigation('register')}>Create New Account</button>\n    </>\n  );\n}\n}\nexport default Login;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n        display_name: '',\n        avatar: null,\n        preview: '',\n      }\n      this.handleInput = this.handleInput.bind(this);\n      this.handleImage = this.handleImage.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInput(e){\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  handleImage(e){\n    let file = e.target.files[0];\n    this.setState({\n      [e.target.name]: file,\n      // same as:   avatar: file,\n      // specifically targeting the first file (index- 0). Take the file we selected and set that on state.\n    // the way to target what we select is going to be with the files attribute\n    });\n\n        // this will allow us to asynchronously read a file. In this case it allows us to read a file.  Then we tell it what to do when it's finished reading:\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n  }\n    reader.readAsDataURL(file);\n      // this gives us back a data url that we can use as a src attribute on our image tag. Using this as an src below to show the image to the client.\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let formData = new FormData();\n    // using formData bc we're sending up JSON & the images. This is a constructor, allows us to write key/value pairs.\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    formData.append('user', this.state.user);  // this is hardcoded- admin has id of 1\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: this.state.formData,\n      //hard coding the above for right now\n    }\n    const response =  await fetch ('/api/v1/users/profiles/', options);\n    console.log(response);\n  }\n\n  render(){\n  return (\n    <>\n    <form onSubmit={this.handleSubmit}>\n      <input type=\"text\" name=\"display_name\" value={this.state.display_name} onChange={this.handleInput}/>\n      <input type=\"file\" name=\"avatar\" onChange={this.handleImage}/>\n\n      {this.state.avatar\n        ? <img src={this.state.preview} alt=\"\"/>\n        : null\n      }\n        <button type=\"submit\">Save Profile!</button>\n    </form>\n    </>\n  );\n}\n}\n\nexport default App;\n","import { Component } from 'react';\nimport './App.css';\nimport Cookies from 'js-cookie';\nimport Registration from './Registration';\nimport Login from './Login';\nimport Profile from './Profile';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n      this.state = {\n        selection: !! Cookies.get('Authorization') ? 'profile' : 'login'\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n  }\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'profile' });\n  } else {\n    alert('Incorrect Username or Password, Please Try Again!')\n  }\n}\n\nasync handleRegistration(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken' : Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/ registration/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection : 'profile'});\n  } else {\n    //throw error\n  }\n}\n\nasync handleLogout(){\n  const options = {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n  if(response.ok){\n    Cookies.remove('Authorization');\n    this.setState({ selection: 'login' });\n  }\n}\n\n//for logout add button and set selection to 'logout'\n  render(){\n    let html;\n\n    if(this.state.selection === 'register') {\n      html = <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation} />;\n    } else if (this.state.selection === 'login') {\n      html = <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation} />;\n    } else {\n      html = <Profile />\n    }\n\n  return (\n    <>\n    <div>\n      {html}\n    </div>\n\n\n    </>\n  );\n}\n}\n\nexport default App;\n\n\n// implement authetication.  Can override the perform create like last week.\n// a user can only create one profile- implement logic to say that you can only create a profile once, but you can edit it as much as you want (put request to edit).   If they don't have a profile- do a POST request to CREATE profile.\n// override to say the person making the request is the one we need to create a profile for- override the perform create\n\n\n\n// before breaking out into profile component:\n// import { Component } from 'react';\n// import './App.css';\n// import Cookies from 'js-cookie';\n// import Registration from './Registration';\n// import Login from './Login';\n// import Profile from './Profile';\n//\n// class App extends Component{\n//   constructor(props) {\n//     super(props);\n//       this.state = {\n//         display_name: '',\n//         avatar: null,\n//         preview: '',\n//       }\n//       this.handleInput = this.handleInput.bind(this);\n//       this.handleImage = this.handleImage.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//\n//       this.handleNavigation = this.handleNavigation.bind(this);\n//       this.handleRegistration = this.handleRegistration.bind(this);\n//   }\n//   handleInput(e){\n//     this.setState({ [e.target.name]: e.target.value });\n//   }\n//   handleImage(e){\n//     let file = e.target.files[0];\n//     this.setState({\n//       [e.target.name]: file,\n//       // same as:   avatar: file,\n//       // specifically targeting the first file (index- 0). Take the file we selected and set that on state.\n//     // the way to target what we select is going to be with the files attribute\n//     });\n//\n//         // this will allow us to asynchronously read a file. In this case it allows us to read a file.  Then we tell it what to do when it's finished reading:\n//     let reader = new FileReader();\n//     reader.onloadend = () => {\n//       this.setState({\n//         preview: reader.result,\n//       });\n//   }\n//     reader.readAsDataURL(file);\n//       // this gives us back a data url that we can use as a src attribute on our image tag. Using this as an src below to show the image to the client.\n//   }\n//\n//   async handleSubmit(e) {\n//     e.preventDefault();\n//     let formData = new FormData();\n//     // using formData bc we're sending up JSON & the images. This is a constructor, allows us to write key/value pairs.\n//     formData.append('avatar', this.state.avatar);\n//     formData.append('display_name', this.state.display_name);\n//     formData.append('user', 1);  // this is hardcoded- admin has id of 1\n//\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'X-CSRFToken': Cookies.get('csrftoken'),\n//       },\n//       body: formData,\n//       //hard coding the above for right now\n//     }\n//     const response =  await fetch ('/api/v1/users/profiles/', options);\n//     console.log(response);\n//   }\n//\n//   render(){\n//   return (\n//     <>\n//     <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation} />\n//     <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation} />\n//     <Profile />\n//     </>\n//   );\n// }\n// }\n//\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}